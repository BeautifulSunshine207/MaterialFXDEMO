import groovy.transform.Field
import org.apache.tools.ant.taskdefs.condition.Os

// Special handling for Windows. Fuck. This. Shit.
@Field var isWindows = (Os.isFamily(Os.FAMILY_WINDOWS))

tasks.register("processCSS") {
    doLast {
        def rootDir = rootProject.projectDir.absolutePath
        def resDir = "$rootDir/modules/resources/src/main/resources/io/github/palexdev/mfxresources/themes"
        List<File> themesDirs = new ArrayList<>()
        new File(resDir).eachFile {
            if (it.isDirectory() && it.name != "javafx") themesDirs += it
        }

        // Check if npm and cssbeautify-cli are installed on the host
        if (!execute("npm -v")) {
            logger.error("npm command could not be found")
            return
        }
        if (!execute("cssbeautify-cli -v")) {
            logger.error("cssbeautify-cli command could not be found")
            return
        }
        logger.info("All dependencies have been found")

        themesDirs.each { dir ->
            dir.eachFileRecurse {
                def name = it.name
                def path = it.absolutePath
                def parent = it.parent
                if (name.endsWith(".css")) { // Unfortunately, doesn't run very well o SCSS files
                    logger.warn("Beautifying: $name")
                    def tmp = new File("${path}.tmp")
                    it.renameTo(tmp)
                    def beautifyCommand = "cssbeautify-cli -a -i2 -f ${path}.tmp -w $parent/$name"
                    execute(beautifyCommand)
                    delete(tmp)
                }
            }
        }
    }
}

boolean execute(String str) {
    if (isWindows) str = "cmd /c " + str // Prepend call to cmd
    try {
        Process proc = new ProcessBuilder().with {
            command str.split(" ")
            redirectOutput(ProcessBuilder.Redirect.DISCARD)
        }.start()
        proc.waitForOrKill(10_000)
        return proc.exitValue() == 0
    } catch (Throwable e) {
        logger.error(e.getMessage())
        return -1
    }
}