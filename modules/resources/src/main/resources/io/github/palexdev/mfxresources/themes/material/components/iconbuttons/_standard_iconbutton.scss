@use '../../tokens/theme' as Theme;
@use '../../abstracts/ripple' as Ripple;
@use '../../abstracts/theme_utils' as ThemeUtils;

// Tokens
$bg-default: transparent !default;
$surface-tint-default: Theme.GetSchemeColor('primary') !default;

$bg-unselected: transparent !default;
$surface-tint-unselected: Theme.GetSchemeColor('on-surface-variant') !default;

$bg-default-disabled: transparent !default;

$icon-default: Theme.GetSchemeColor('primary') !default;
$icon-unselected: Theme.GetSchemeColor('on-surface-variant') !default;
$icon-disabled: Theme.GetSchemeColor('on-surface');
$ripple-default: Ripple.Ripple('on-surface-variant') !default;

/****************************************************************************************************
 * Standard IconButtons
 ****************************************************************************************************/
.mfx-icon-button {
  -fx-background-color: $bg-unselected;
}

.mfx-icon-button:disabled {
  -fx-background-color: $bg-default-disabled;
}

.mfx-icon-button > .surface > .bg {
  -fx-background-color: $surface-tint-unselected;
}

.mfx-icon-button > .mfx-icon-wrapper > .mfx-font-icon {
  -mfx-color: $icon-unselected;
}

.mfx-icon-button > .surface > .mfx-ripple-generator {
  -mfx-ripple-color: $ripple-default;
}

// Toggle Variant
.mfx-icon-button:selectable:selected {
  -fx-background-color: $bg-default;
}

.mfx-icon-button:selectable:selected > .surface > .bg {
  -fx-background-color: $surface-tint-default;
}

.mfx-icon-button:selectable:selected > .mfx-icon-wrapper > .mfx-font-icon {
  -mfx-color: $icon-default;
}

.mfx-icon-button:selectable:disabled > .mfx-icon-wrapper > .mfx-font-icon {
  -mfx-color: $icon-disabled;
}
