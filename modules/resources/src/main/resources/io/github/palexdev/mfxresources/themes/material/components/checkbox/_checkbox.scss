@use '../../tokens/theme' as Theme;
@use '../../tokens/typography' as Typography;
@use '../../abstracts/ripple' as Ripple;

// Component-level tokens (unselected)
$surface-tint: Theme.GetSchemeColor('primary');
$surface-radius: 100px !default;
$surface-size: 40px !default;

$icon-wrapper-bd: Theme.GetSchemeColor('on-surface-variant') !default;
$icon-wrapper-bd-width: 2px !default;
$icon-wrapper-size: 18px !default;
$icon-wrapper-radius: 2px !default;
$icon-size: 12px !default;

$text-color: Theme.GetSchemeColor('on-surface') !default;
$ripple-color: Ripple.Ripple('primary') !default;

/****************************************************************************************************
 * Checkboxes
 ****************************************************************************************************/
.mfx-checkbox {
  @include Typography.LabelLarge();
  -fx-text-fill: $text-color;
}

.mfx-checkbox > .surface {
  -fx-pref-width: $surface-size;
  -fx-pref-height: $surface-size;
}

.mfx-checkbox > .surface > .mfx-ripple-generator {
  -mfx-ripple-color: $ripple-color;
}

.mfx-checkbox > .surface > .bg {
  -fx-background-color: $surface-tint;
  -fx-background-radius: $surface-radius;
}

.mfx-checkbox > .mfx-icon-wrapper {
  -fx-background-radius: $icon-wrapper-radius;
  -fx-border-color: $icon-wrapper-bd;
  -fx-border-radius: $icon-wrapper-radius;
  -fx-border-width: $icon-wrapper-bd-width;
  -mfx-size: $icon-wrapper-size;
  -mfx-animation-preset: CLIP;
}

.mfx-checkbox > .mfx-icon-wrapper > .mfx-font-icon {
  -mfx-size: $icon-size;
  visibility: hidden;
}

// Component-level tokens (indeterminate)
$icon-wrapper-bg-indeterminate: Theme.GetSchemeColor('primary') !default;
$icon-wrapper-bd-width-indeterminate: 0px !default;

.mfx-checkbox:indeterminate > .mfx-icon-wrapper {
  -fx-background-color: $icon-wrapper-bg-indeterminate;
  -fx-border-width: $icon-wrapper-bd-width-indeterminate;
}

// Component-level tokens (selected)
$icon-wrapper-bg: Theme.GetSchemeColor('primary') !default;
$icon-wrapper-bd-width-selected: 0px !default;
$icon-color: Theme.GetSchemeColor('on-primary') !default;


.mfx-checkbox:selected > .mfx-icon-wrapper {
  -fx-background-color: $icon-wrapper-bg;
  -fx-border-width: $icon-wrapper-bd-width-selected;
}

.mfx-checkbox:selected > .mfx-icon-wrapper > .mfx-font-icon,
.mfx-checkbox:indeterminate > .mfx-icon-wrapper > .mfx-font-icon {
  visibility: visible;
  -mfx-color: $icon-color;
}

// Component-level tokens (error)
$surface-tint-error: Theme.GetSchemeColor('error') !default;
$icon-color-error: Theme.GetSchemeColor('on-error') !default;
$icon-wrapper-error: Theme.GetSchemeColor('error') !default;
$ripple-color-error: Ripple.Ripple('error') !default;

.mfx-checkbox:error > .surface > .mfx-ripple-generator {
  -mfx-ripple-color: $ripple-color-error;
}

.mfx-checkbox:error > .surface > .bg {
  -fx-background-color: $surface-tint-error;
}

.mfx-checkbox:error > .mfx-icon-wrapper {
  -fx-border-color: $icon-wrapper-error;
}

.mfx-checkbox:selected:error > .mfx-icon-wrapper,
.mfx-checkbox:indeterminate:error > .mfx-icon-wrapper {
  -fx-background-color: $icon-wrapper-error;
}

.mfx-checkbox:selected:error > .mfx-icon-wrapper > .mfx-font-icon {
  -mfx-color: $icon-color-error;
}

// Component-level tokens (disabled)
$icon-wrapper-disabled: rgba(Theme.GetSchemeColor('on-surface'), Theme.GetStateLayer('disabled-text')) !default;

.mfx-checkbox:disabled > .mfx-icon-wrapper {
  -fx-background-color: transparent;
  -fx-border-color: $icon-wrapper-disabled;
}

.mfx-checkbox:selected:disabled > .mfx-icon-wrapper,
.mfx-checkbox:indeterminate:disabled > .mfx-icon-wrapper {
  -fx-background-color: $icon-wrapper-disabled;
}