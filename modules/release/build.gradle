import com.vanniktech.maven.publish.SonatypeHost

plugins {
    id 'com.github.johnrengelman.shadow' version "$shadowJarPlugin"
}

version = "$mfx"

dependencies {
    api(project(':core'))
    api(project(':components'))
    api(project(":effects"))
    api(project(':localization'))
    api(project(':resources'))
    api "io.github.palexdev:virtualizedfx:$vfx"
}

java {
    // These will be empty but Sonatype needs them for some reason, don't know if they can be disabled, don't care
    // Maven publish is a fucking garbage mess
    withSourcesJar()
    withJavadocJar()
    tasks.withType(Jar).each { it.archiveBaseName.set("materialfx-all") }
}

shadowJar {
    mergeServiceFiles()
    dependencies {
        include(project(':core'))
        include(project(':components'))
        include(project(":effects"))
        include(project(':localization'))
        include(project(':resources'))
    }
    archiveClassifier = null
}

sourcesJar {
    var projects = [
            project(':core'),
            project(':components'),
            project(":effects"),
            project(':localization'),
            project(':resources')
    ]
    from projects.collect {
        exclude("module-info.java")
        it.sourceSets.main.allSource
    }
    dependsOn(':resources:compileSass')
}

shadowJar.finalizedBy javadocJar
shadowJar.finalizedBy sourcesJar

mavenPublishing {
    publishToMavenCentral(SonatypeHost.S01)
    signAllPublications()
}

configurations {
    Task shadowJarTask = project.tasks.findByName('shadowJar')
    [apiElements, runtimeElements].each {
        if (shadowJarTask) {
            it.outgoing.artifacts.removeIf {
                it.buildDependencies.getDependencies(null)
                        .contains(project.tasks.named('jar', Jar).get())
            }
            it.outgoing.artifact(shadowJarTask)
        }
    }
}